plugins {
    id 'com.github.johnrengelman.shadow'
}

base {
    archivesName = rootProject.name + "-platform"
}

group = "band.kessoku.lib.platform"
version = libs.versions.mod.get() + "+fabric." + libs.versions.minecraft.get()

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation libs.fabric.loader
    modImplementation libs.fabric.api
    common(project(path: ':platform-common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':platform-common', configuration: 'transformProductionFabric')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}